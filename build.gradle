
import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id 'java'
    id 'application'
    id "com.vanniktech.maven.publish" version "0.28.0"

}

repositories {
    mavenCentral()
}

dependencies {

    // define a BOM and its version
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.12.0"))
    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation group: 'org.tinylog', name: 'tinylog-impl', version: '2.0.0'
    implementation group: 'org.json', name: 'json', version: '20180813'
}

group = 'io.github.sapandang'
version = '1.0'


mavenPublishing {

    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)
    signAllPublications()
    coordinates("io.github.sapandang", "Jrequests", "1.0")

    pom {
        name = "JRequests"
        description = "A Simple java request library"
        inceptionYear = "2024"
        url = "https://github.com/sapandang/JRequests"
        licenses {
            license {
                name = "The Apache License, Version 2.0"
                url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                distribution = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }
        developers {
            developer {
                id = "sapandang"
                name = "sapan"
                url = "https://github.com/sapandang/"
            }
        }
        scm {
            url = "https://github.com/sapandang/JRequests"
            connection = "scm:git:git://github.com/sapandang/JRequests.git"
            developerConnection = "scm:git:ssh://git@github.com/sapandang/JRequests.git"
        }
    }
}




task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'skd.requests.Requests'
    }
    archiveBaseName = 'skd-requests'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

test {
    useJUnitPlatform()
}